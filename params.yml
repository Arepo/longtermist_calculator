# This file contains all the subjective parameters for full_calc.py - the script which implements
# the perils-focused model described in this essay
# https://forum.effectivealtruism.org/posts/YnBwoNNqe6knBJH8p/modelling-civilisation-after-a-catastrophe

perils:
  extinction:
    # Desmos graph: https://www.desmos.com/calculator/8avhbovkxg - this graph assumes k=1. To see
    # the effect of reboots on the estimates, you'll need to manually increase the x-stretch (parameter
    # b on Desmos) by an appropriate proportion.
    y_stretch: 0.004
    base_x_stretch: 118
    x_translation: 15
    sharpness: 2.5
    stretch_per_reboot: 1.5
    base_background_risk: 0
    per_reboot_background_risk_multiplier: 1

  survival:
    # Desmos graph:
    # https://www.desmos.com/calculator/21twtfavxk
    y_stretch: 0.000_005
    base_x_stretch: 91
    x_translation: 0
    sharpness: 2.4
    stretch_per_reboot: 1.5
    base_background_risk: 0
    per_reboot_background_risk_multiplier: 1

  preindustrial:
    # Desmos graph:
    # https://www.desmos.com/calculator/xgouzeyehb
    y_stretch: 0.00045
    base_x_stretch: 20
    x_translation: 0
    sharpness: 2
    stretch_per_reboot: 1.5
    base_background_risk: 0
    per_reboot_background_risk_multiplier: 1

  industrial:
    # Desmos graph:
    # https://www.desmos.com/calculator/nhnbxrczk0
    y_stretch: 0.0015
    base_x_stretch: 69
    x_translation: 8
    sharpness: 2
    stretch_per_reboot: 1.5 # As estimated by for all time of perils technologies
    base_background_risk: 0
    per_reboot_background_risk_multiplier: 1

  progress_year_n:
    # Desmos graph:
    # https://www.desmos.com/calculator/olr4mepouy

    # The green graph represents the probability of regressing from progress year x to progress year
    # n, such that 0 <= n <= x, and the red graph shows the same thing with a different x-axis - the
    # probability of regressing from progress year p to progress year x, such that 0 <= x <= p
    any_regression: 0.026
    geometric_base: 1.4

  multiplanetary:
    # Desmos graph: https://www.desmos.com/calculator/7zriffon47
    base_x_stretch: 66
    x_translation: 80
    y_stretch: 0.07
    sharpness: 2
    stretch_per_reboot: 1.5
    # I'm including the subsequent two params to avoid conditionals in the code, but these should
    # multiply to 0
    base_background_risk: 0
    per_reboot_background_risk_multiplier: 1

  interstellar:
    # Desmos graph: https://www.desmos.com/calculator/3jubakv9is

    # TODO put in non-placeholder values here
    y_stretch: 0.02
    base_x_stretch: 118
    x_translation: 15
    sharpness: 2.5
    stretch_per_reboot: 1.5 # As estimated by for all time of perils technologies
    # I'm including the subsequent two params to avoid conditionals in the code, but these should
    # multiply to 0 under normal assumptions. You could set them higher to factor in the chance
    # of an alien civilisation spreading throughout the galaxy - though then you'd need to tweak
    # the other states to allow for that too.
    base_background_risk: 0
    per_reboot_background_risk_multiplier: 1



multiplanetary:
  extinction:
    # Desmos graph:
    # https://www.desmos.com/calculator/20grgq1ar5
    two_planet_risk: 0.12
    decay_rate: 0.55
    min_risk: 0
    x_translation: 2

  survival:
    two_planet_risk: 0
    decay_rate: 0
    min_risk: 0
    x_translation: 2

  preindustrial:
    two_planet_risk: 0
    decay_rate: 0
    min_risk: 0
    x_translation: 2

  industrial:
    two_planet_risk: 0
    decay_rate: 0
    min_risk: 0
    x_translation: 2

  n_planets:
    # Desmos graph:
    # https://www.desmos.com/calculator/pn8wcp6tcj
    # The red line is a function indicating the probability that at x planets we regress some number
    # before we settle another. Unlike in the time of perils, a 'regression' must be a loss of at
    # least 1, and at most (x-1), since regressing to 0 planets is covered by 'extinction'.
    #
    # The black line indicates the probability that, given some regression from a state of x planets,
    # we regress to n planets (where n is an adjustable parameter on the graph, initially set to 1)

    # The green line represents the total probability that we regress from x to n planets - so it's
    # the y-value of the other two lines multiplied
    two_planet_risk: 0.2
    decay_rate: 0.4
    x_translation: 2
    min_risk: 0.01
    geometric_base: 1.4

  perils: 'n/a'
  # transitioning to perils is just the specific case of transitioning to n=1 planets given our
  # assumptions about transitioning to n planets, so doesn't take any unique params

  interstellar:
    # Desmos graph: https://www.desmos.com/calculator/1wazngfpba,
    x_stretch: 6
    y_stretch: 0.65
    x_translation: 1
    sharpness: 2

preperils:

  survival:
    # I'm using a constant for this, so no Desmos graph
    base_estimate: 0.0003
  preindustrial:
    # Desmos graph of defaults: (where x = k) at https://www.desmos.com/calculator/zf4xtayuhm
    base_expected_time_in_years: 13_700
    extinction_probability_per_year_denominator: 87_000 # The value used in the code is 1/<some value>, but we can't do arithmetic in
    # Yaml, so the param is just the denominator
    stretch_per_reboot: 1.05
  industrial:
    # Desmos graph:
    # https://www.desmos.com/calculator/tbdcjmwao8 (defaulting to values for the pessimistic
    # scenario below)
    base_annual_extinction_probability_denominator: 87_000 # The value used in the code is 1/<some value>, but we can't do arithmetic in
    # Yaml, so the param is just the denominator
    annual_extinction_probability_multiplier: 0.7
    base_expected_time_in_years: 1450
    stretch_per_reboot: 1.5


